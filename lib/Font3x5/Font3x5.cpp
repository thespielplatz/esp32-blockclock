#include "Font3x5.hpp"

// Define characters as pixel columns, each 3 bits high
const FontChar FONT_3x5[] = {
    {'A', {0b111, 0b101, 0b111, 0b101, 0b101}},
    {'B', {0b110, 0b101, 0b110, 0b101, 0b110}},
    {'C', {0b111, 0b100, 0b100, 0b100, 0b111}},
    {'D', {0b110, 0b101, 0b101, 0b101, 0b110}},
    {'E', {0b111, 0b100, 0b110, 0b100, 0b111}},
    {'F', {0b111, 0b100, 0b110, 0b100, 0b100}},
    {'G', {0b111, 0b100, 0b101, 0b101, 0b111}},
    {'H', {0b101, 0b101, 0b111, 0b101, 0b101}},
    {'I', {0b111, 0b010, 0b010, 0b010, 0b111}},
    {'J', {0b001, 0b001, 0b001, 0b101, 0b111}},
    {'K', {0b110, 0b101, 0b110, 0b101, 0b101}},
    {'L', {0b100, 0b100, 0b100, 0b100, 0b111}},
    {'M', {0b101, 0b111, 0b111, 0b101, 0b101}},
    {'N', {0b110, 0b111, 0b101, 0b101, 0b101}},
    {'O', {0b111, 0b101, 0b101, 0b101, 0b111}},
    {'P', {0b110, 0b101, 0b110, 0b100, 0b100}},
    {'Q', {0b111, 0b101, 0b101, 0b111, 0b001}},
    {'R', {0b110, 0b101, 0b110, 0b101, 0b101}},
    {'S', {0b111, 0b100, 0b111, 0b001, 0b111}},
    {'T', {0b111, 0b010, 0b010, 0b010, 0b010}},
    {'U', {0b111, 0b101, 0b101, 0b101, 0b111}},
    {'V', {0b111, 0b101, 0b101, 0b101, 0b010}},
    {'W', {0b101, 0b101, 0b111, 0b111, 0b101}},
    {'X', {0b101, 0b101, 0b010, 0b101, 0b101}},
    {'Y', {0b101, 0b101, 0b111, 0b001, 0b001}},
    {'Z', {0b111, 0b001, 0b010, 0b100, 0b111}},
    {'0', {0b111, 0b101, 0b101, 0b101, 0b111}},
    {'1', {0b010, 0b110, 0b010, 0b010, 0b111}},
    {'2', {0b111, 0b001, 0b111, 0b100, 0b111}},
    {'3', {0b111, 0b001, 0b111, 0b001, 0b111}},
    {'4', {0b101, 0b101, 0b111, 0b001, 0b001}},
    {'5', {0b111, 0b100, 0b111, 0b001, 0b111}},
    {'6', {0b111, 0b100, 0b111, 0b101, 0b111}},
    {'7', {0b111, 0b001, 0b010, 0b010, 0b010}},
    {'8', {0b111, 0b101, 0b111, 0b101, 0b111}},
    {'9', {0b111, 0b101, 0b111, 0b001, 0b001}},
    {'-', {0b000, 0b000, 0b111, 0b000, 0b000}},
    {'_', {0b000, 0b000, 0b000, 0b000, 0b111}},
    {'.', {0b000, 0b000, 0b000, 0b010, 0b000}},
    {'!', {0b010, 0b010, 0b010, 0b000, 0b010}},
    {'?', {0b111, 0b001, 0b011, 0b000, 0b011}},
    {' ', {0b000, 0b000, 0b000, 0b000, 0b000}},
};

const int FONT_3x5_LENGTH = sizeof(FONT_3x5) / sizeof(FontChar);

const uint8_t* get_char_pixels(char c)
{
    for (int i = 0; i < FONT_3x5_LENGTH; ++i) {
        if (FONT_3x5[i].character == c) {
            return FONT_3x5[i].pixels;
        }
    }
    return FONT_3x5[FONT_3x5_LENGTH - 1].pixels; // fallback: space
}
